bcpackage App;

import Class.Session;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
//import com.mysql.cj.xdevapi.Statement;
import java.text.DecimalFormat;
import java.sql.Statement;

import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

//import java.sql.Connection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
//import java.sql.Statement;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;

public class Pembelian extends javax.swing.JFrame {

    public Pembelian() {
        initComponents();
        Tampilkan_Products();
//        hitungTotalSubtotal();

        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"ID", "Jenis", "Harga", "Jumlah", "Subtotal"});
        tbl_detailPembelian.setModel(model);

        TableColumnModel columnModel = tbl_detailPembelian.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(40);  // ID
        columnModel.getColumn(1).setPreferredWidth(100); // Barcode
        columnModel.getColumn(2).setPreferredWidth(120); // Jenis
        columnModel.getColumn(3).setPreferredWidth(50);  // Stok
        columnModel.getColumn(4).setPreferredWidth(100); // Harga

    }

    private void Tampilkan_Products() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"ID", "Barcode", "Jenis", "Stok", "Harga"});
        tbl_products.setModel(model);

        // Atur lebar kolom setelah model ditetapkan
        TableColumnModel columnModel = tbl_products.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(40);  // ID
        columnModel.getColumn(1).setPreferredWidth(100); // Barcode
        columnModel.getColumn(2).setPreferredWidth(120); // Jenis
        columnModel.getColumn(3).setPreferredWidth(50);  // Stok
        columnModel.getColumn(4).setPreferredWidth(100); // Harga

        // Format Mata Uang Rupiah
        DecimalFormat kursIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
        DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

        formatRp.setCurrencySymbol("Rp ");
        formatRp.setMonetaryDecimalSeparator(',');
        formatRp.setGroupingSeparator('.');

        kursIndonesia.setDecimalFormatSymbols(formatRp);

        try {
            java.sql.Connection conn = Config.configDB();
            String sql = "SELECT * FROM products";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                int id = rs.getInt("id");
                String barcode = rs.getString("barcode");
                String nama = rs.getString("jenis");
                int stok = rs.getInt("stok");
                double harga = rs.getDouble("harga");

                // Format harga ke Rupiah
                String hargaRupiah = kursIndonesia.format(harga);

                model.addRow(new Object[]{id, barcode, nama, stok, hargaRupiah});
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_add = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        btn_simpan = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_detailPembelian = new javax.swing.JTable();
        tbl_detailPembelian.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel label = (JLabel) super.getTableCellRendererComponent(
                    table, value, isSelected, hasFocus, row, column);

                label.setBackground(new Color(0x35AEFF));
                label.setForeground(Color.WHITE);
                label.setOpaque(true);
                return label;
            }
        });
        txt_subtotal = new javax.swing.JTextField();
        txt_jenis = new javax.swing.JTextField();
        txt_supplier = new javax.swing.JTextField();
        txt_hargaSatuan = new javax.swing.JTextField();
        txt_jumlah = new javax.swing.JTextField();
        txt_hargaSupplier = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_products = new javax.swing.JTable();
        tbl_products.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel label = (JLabel) super.getTableCellRendererComponent(
                    table, value, isSelected, hasFocus, row, column);

                label.setBackground(new Color(0x35AEFF));
                label.setForeground(Color.WHITE);
                label.setOpaque(true);
                return label;
            }
        });
        btn_product = new javax.swing.JButton();
        btn_penjualan = new javax.swing.JButton();
        btn_pembelian = new javax.swing.JButton();
        btn_preorder = new javax.swing.JButton();
        btn_daftar = new javax.swing.JButton();
        btn_catatan = new javax.swing.JButton();
        btn_keluar = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        bar_bawah = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_add.setContentAreaFilled(false);
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        getContentPane().add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 40, 90, 30));

        btn_reset.setContentAreaFilled(false);
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });
        getContentPane().add(btn_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 43, 90, 30));

        btn_simpan.setContentAreaFilled(false);
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 240, 90, 30));

        tbl_detailPembelian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_detailPembelian.setSelectionBackground(new java.awt.Color(0, 204, 255));
        jScrollPane4.setViewportView(tbl_detailPembelian);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 470, 360));

        txt_subtotal.setBorder(null);
        getContentPane().add(txt_subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 193, 90, 20));

        txt_jenis.setBorder(null);
        getContentPane().add(txt_jenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 53, 80, 20));

        txt_supplier.setBorder(null);
        getContentPane().add(txt_supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 132, 80, 20));

        txt_hargaSatuan.setBorder(null);
        getContentPane().add(txt_hargaSatuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 53, 80, 20));

        txt_jumlah.setBorder(null);
        getContentPane().add(txt_jumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 53, 70, 20));

        txt_hargaSupplier.setBorder(null);
        getContentPane().add(txt_hargaSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 53, 90, 20));

        tbl_products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_products.setSelectionBackground(new java.awt.Color(0, 204, 255));
        tbl_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_productsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_products);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 390, 410));

        btn_product.setContentAreaFilled(false);
        btn_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_productActionPerformed(evt);
            }
        });
        getContentPane().add(btn_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 90, 60));

        btn_penjualan.setContentAreaFilled(false);
        btn_penjualan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_penjualanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_penjualan, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 90, 60));

        btn_pembelian.setContentAreaFilled(false);
        btn_pembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pembelianActionPerformed(evt);
            }
        });
        getContentPane().add(btn_pembelian, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 90, 60));

        btn_preorder.setContentAreaFilled(false);
        btn_preorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_preorderActionPerformed(evt);
            }
        });
        getContentPane().add(btn_preorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, 90, 60));

        btn_daftar.setContentAreaFilled(false);
        btn_daftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_daftarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_daftar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 460, 90, 60));

        btn_catatan.setContentAreaFilled(false);
        btn_catatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_catatanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_catatan, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 460, 90, 60));

        btn_keluar.setContentAreaFilled(false);
        btn_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keluarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 460, 90, 60));

        btn_hapus.setContentAreaFilled(false);
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        getContentPane().add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 290, 90, 30));

        bar_bawah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Png/bawah.png"))); // NOI18N
        getContentPane().add(bar_bawah, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 465, 1000, 90));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI_Png/pembelian.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 447));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/login.gif"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 555));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_productsMouseClicked
        // TODO add your handling code here:
        int baris = tbl_products.rowAtPoint(evt.getPoint()); // ambil baris yang diklik

        String jenis = tbl_products.getValueAt(baris, 2).toString(); // kolom ke-3 → Jenis
        String harga = tbl_products.getValueAt(baris, 4).toString(); // kolom ke-5 → Harga Satuan (ubah sesuai kolom yang benar)

        txt_jenis.setText(jenis);
        txt_hargaSatuan.setText(harga);

    }//GEN-LAST:event_tbl_productsMouseClicked

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        txt_hargaSatuan.setText("");
        txt_hargaSupplier.setText("");
        txt_jenis.setText("");
        txt_jumlah.setText("");
        txt_subtotal.setText("");
        txt_supplier.setText("");
    }//GEN-LAST:event_btn_resetActionPerformed

    private int totalSubtotal = 0;

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        try {
            // Validasi input tidak boleh kosong
            if (txt_jenis.getText().isEmpty() || txt_hargaSatuan.getText().isEmpty()
                    || txt_jumlah.getText().isEmpty() || txt_hargaSupplier.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi!");
                return;
            }

            String jenis = txt_jenis.getText();

            // Formatter Rupiah Indonesia
            Locale indonesia = new Locale("id", "ID");
            NumberFormat rupiahFormat = NumberFormat.getCurrencyInstance(indonesia);
            NumberFormat parser = NumberFormat.getInstance(indonesia);

            // Parse harga satuan dan supplier dari input format "Rp9.000,00" atau "9.000,00"
            int harga = (int) parser.parse(txt_hargaSatuan.getText().replace("Rp", "").trim()).doubleValue();
            int hargaSupplier = (int) parser.parse(txt_hargaSupplier.getText().replace("Rp", "").trim()).doubleValue();
            int jumlah = Integer.parseInt(txt_jumlah.getText());
            int subtotal = hargaSupplier; // hanya ambil 1x harga supplier
            totalSubtotal += subtotal;
            txt_subtotal.setText(rupiahFormat.format(totalSubtotal));

            DefaultTableModel model = (DefaultTableModel) tbl_detailPembelian.getModel();

            // Cek apakah jenis ikan sudah ada di detail pembelian
            boolean ditemukan = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 1).toString().equalsIgnoreCase(jenis)) {
                    int jumlahLama = Integer.parseInt(model.getValueAt(i, 3).toString());

                    // Parse subtotal lama
                    int subtotalLama = (int) parser.parse(model.getValueAt(i, 4).toString().replace("Rp", "").trim()).doubleValue();

                    int jumlahBaru = jumlahLama + jumlah;
                    int subtotalBaru = subtotalLama + hargaSupplier;

                    model.setValueAt(jumlahBaru, i, 3);
                    model.setValueAt(rupiahFormat.format(subtotalBaru), i, 4);

                    ditemukan = true;
                    break;
                }
            }

            // Jika belum ada, tambahkan baris baru ke tabel pembelian
            if (!ditemukan) {
                int nextID = model.getRowCount() + 1;
                model.addRow(new Object[]{
                    nextID,
                    jenis,
                    rupiahFormat.format(harga),
                    jumlah,
                    rupiahFormat.format(subtotal)
                });
            }

            // Tambah stok atau tambahkan produk baru ke tabel produk
            DefaultTableModel modelProduk = (DefaultTableModel) tbl_products.getModel();
            boolean produkDitemukan = false;
            for (int i = 0; i < modelProduk.getRowCount(); i++) {
                if (modelProduk.getValueAt(i, 2).toString().equalsIgnoreCase(jenis)) {
                    int stokLama = Integer.parseInt(modelProduk.getValueAt(i, 3).toString());
                    int stokBaru = stokLama + jumlah;
                    modelProduk.setValueAt(stokBaru, i, 3);
                    produkDitemukan = true;
                    break;
                }
            }

            // Jika produk belum ada, tambahkan produk baru
            if (!produkDitemukan) {
                int nextID = modelProduk.getRowCount() + 1;
                String barcodeBaru = String.format("BR%06d", 67 + nextID);

                modelProduk.addRow(new Object[]{
                    nextID,
                    barcodeBaru,
                    jenis,
                    jumlah,
                    rupiahFormat.format(harga)
                });
            }

            // Kosongkan input
            txt_supplier.setText("");
            txt_jenis.setText("");
            txt_hargaSatuan.setText("");
            txt_jumlah.setText("");
            txt_hargaSupplier.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }


    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        // TODO add your handling code here:
        try {
            String supplier = txt_supplier.getText();
            if (supplier.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Supplier tidak boleh kosong!");
                return;
            }

            int idAkun = Session.getIdAkun(); // Ambil dari session login
            double total = totalSubtotal;     // Pastikan ini sudah dihitung sebelumnya

            Connection conn = App.Config.configDB();

            // 1. Insert ke tabel pembelian
            String sql = "INSERT INTO pembelian (id_akun, total, tanggal, supplier) VALUES (?, ?, NOW(), ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, idAkun);
            stmt.setDouble(2, total);
            stmt.setString(3, supplier);
            int rowsInserted = stmt.executeUpdate();

            if (rowsInserted > 0) {
                // 2. Ambil ID pembelian terakhir (untuk MySQL)
                Statement getIdStmt = conn.createStatement();
                ResultSet rsId = getIdStmt.executeQuery("SELECT LAST_INSERT_ID()");
                int idPembelian = 0;
                if (rsId.next()) {
                    idPembelian = rsId.getInt(1);
                }

                // 3. Proses data dari tabel detail GUI
                DefaultTableModel model = (DefaultTableModel) tbl_detailPembelian.getModel();
                for (int i = 0; i < model.getRowCount(); i++) {
                    String jenis = model.getValueAt(i, 1).toString();

                    String hargaStr = model.getValueAt(i, 2).toString().replace("Rp", "").replace(".", "").replace(",", ".").trim();
                    double hargaSatuan = Double.parseDouble(hargaStr);
                    int jumlah = Integer.parseInt(model.getValueAt(i, 3).toString());
                    String subtotalStr = model.getValueAt(i, 4).toString().replace("Rp", "").replace(".", "").replace(",", ".").trim();
                    double subtotal = Double.parseDouble(subtotalStr);

                    // 4. Cek apakah produk dengan jenis ini sudah ada
                    String checkSql = "SELECT id, stok FROM products WHERE jenis = ?";
                    PreparedStatement checkStmt = conn.prepareStatement(checkSql);
                    checkStmt.setString(1, jenis);
                    ResultSet rs = checkStmt.executeQuery();

                    int idProduct;
                    if (rs.next()) {
                        // Produk sudah ada, update stok
                        idProduct = rs.getInt("id");
                        int stokLama = rs.getInt("stok");
                        int stokBaru = stokLama + jumlah;

                        String updateSql = "UPDATE products SET stok = ? WHERE id = ?";
                        PreparedStatement updateStmt = conn.prepareStatement(updateSql);
                        updateStmt.setInt(1, stokBaru);
                        updateStmt.setInt(2, idProduct);
                        updateStmt.executeUpdate();
                    } else {
                        // Produk belum ada, insert ke tabel products
                        String insertProductSql = "INSERT INTO products (barcode, jenis, stok, harga) VALUES (?, ?, ?, ?)";
                        PreparedStatement insertProductStmt = conn.prepareStatement(insertProductSql);
                        String barcode = "BR" + String.format("%06d", (int) (Math.random() * 1000000)); // buat barcode acak
                        insertProductStmt.setString(1, barcode);
                        insertProductStmt.setString(2, jenis);
                        insertProductStmt.setInt(3, jumlah);
                        insertProductStmt.setDouble(4, hargaSatuan);
                        insertProductStmt.executeUpdate();

                        // Ambil ID produk yang baru ditambahkan
                        Statement getProductId = (Statement) conn.createStatement();
                        ResultSet rsNewId = getProductId.executeQuery("SELECT LAST_INSERT_ID()");
                        rsNewId.next();
                        idProduct = rsNewId.getInt(1);
                    }

                    // 5. Insert ke detail_pembelian
                    String detailSql = "INSERT INTO detail_pembelian (id_pembelian, id_products, jumlah, harga_satuan, subtotal) VALUES (?, ?, ?, ?, ?)";
                    PreparedStatement detailStmt = conn.prepareStatement(detailSql);
                    detailStmt.setInt(1, idPembelian);
                    detailStmt.setInt(2, idProduct);
                    detailStmt.setInt(3, jumlah);
                    detailStmt.setDouble(4, hargaSatuan);
                    detailStmt.setDouble(5, subtotal);
                    detailStmt.executeUpdate();
                }

                // 6. Sukses
                JOptionPane.showMessageDialog(this, "Data pembelian berhasil disimpan!");

                // 7. Reset form
                txt_supplier.setText("");
                txt_subtotal.setText("");
                model.setRowCount(0);
                totalSubtotal = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
        }


    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_productActionPerformed
        // TODO add your handling code here:
        Timer timer = new Timer(5, null);
        timer.addActionListener(new ActionListener() {
            float opacity = 1.0f;

            public void actionPerformed(ActionEvent e) {
                opacity -= 0.05f;
                if (opacity <= 0.0f) {
                    timer.stop();
                    product halamanproduct = new product();
                    halamanproduct.setVisible(true);
                    dispose(); // Tutup login window setelah fade-out
                } else {
                    setOpacity(opacity); // Kurangi opacity
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_productActionPerformed

    private void btn_penjualanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_penjualanActionPerformed
        // TODO add your handling code here:
        Timer timer = new Timer(5, null);
        timer.addActionListener(new ActionListener() {
            float opacity = 1.0f;

            public void actionPerformed(ActionEvent e) {
                opacity -= 0.05f;
                if (opacity <= 0.0f) {
                    timer.stop();
                    Penjualan halamanpenjualan = new Penjualan();
                    halamanpenjualan.setVisible(true);
                    dispose(); // Tutup login window setelah fade-out
                } else {
                    setOpacity(opacity); // Kurangi opacity
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_penjualanActionPerformed

    private void btn_pembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pembelianActionPerformed
        // TODO add your handling code here:
        Timer timer = new Timer(5, null);
        timer.addActionListener(new ActionListener() {
            float opacity = 1.0f;

            public void actionPerformed(ActionEvent e) {
                opacity -= 0.05f;
                if (opacity <= 0.0f) {
                    timer.stop();
                    Pembelian halamanpembelian = new Pembelian();
                    halamanpembelian.setVisible(true);
                    dispose(); // Tutup login window setelah fade-out
                } else {
                    setOpacity(opacity); // Kurangi opacity
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_pembelianActionPerformed

    private void btn_preorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_preorderActionPerformed
        // TODO add your handling code here:
        Timer timer = new Timer(5, null);
        timer.addActionListener(new ActionListener() {
            float opacity = 1.0f;

            public void actionPerformed(ActionEvent e) {
                opacity -= 0.05f;
                if (opacity <= 0.0f) {
                    timer.stop();
                    PreOrder halamanpo = new PreOrder();
                    halamanpo.setVisible(true);
                    dispose(); // Tutup login window setelah fade-out
                } else {
                    setOpacity(opacity); // Kurangi opacity
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_preorderActionPerformed

    private void btn_daftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_daftarActionPerformed
        // TODO add your handling code here:
        Timer timer = new Timer(20, null);
        timer.addActionListener(new ActionListener() {
            float opacity = 1.0f;

            public void actionPerformed(ActionEvent e) {
                opacity -= 0.05f;
                if (opacity <= 0.0f) {
                    timer.stop();
                    Daftar halamandaftar = new Daftar();
                    halamandaftar.setVisible(true);
                    dispose(); // Tutup login window setelah fade-out
                } else {
                    setOpacity(opacity); // Kurangi opacity
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_daftarActionPerformed

    private void btn_catatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_catatanActionPerformed
        // TODO add your handling code here:
        Timer timer = new Timer(20, null);
        timer.addActionListener(new ActionListener() {
            float opacity = 1.0f;

            public void actionPerformed(ActionEvent e) {
                opacity -= 0.05f;
                if (opacity <= 0.0f) {
                    timer.stop();
                    Catatan halamancatatan = new Catatan();
                    halamancatatan.setVisible(true);
                    dispose(); // Tutup login window setelah fade-out
                } else {
                    setOpacity(opacity); // Kurangi opacity
                }
            }
        });
        timer.start();
    }//GEN-LAST:event_btn_catatanActionPerformed

    private void btn_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keluarActionPerformed
        // TODO add your handling code here:
        int dialogBtn = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "apakah anda yakin ingin keluar?","PERINGATAN",dialogBtn);

        if(dialogResult == 0) {
            Login n = new Login();
            n.setVisible(true);
            this.dispose();
        }else{

        }
    }//GEN-LAST:event_btn_keluarActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        // TODO add your handling code here:

    DefaultTableModel model = (DefaultTableModel) tbl_detailPembelian.getModel();
        int selectedRow = tbl_detailPembelian.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus dari tabel pembelian!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus item ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Hapus baris dari tabel
            model.removeRow(selectedRow);

            // Hitung ulang totalSubtotal
            double newSubtotal = 0.0;
            for (int i = 0; i < model.getRowCount(); i++) {
                String subtotalStr = model.getValueAt(i, 4).toString().replace("Rp", "").replace(".", "").replace(",", ".").trim();
                double subtotal = Double.parseDouble(subtotalStr);
                newSubtotal += subtotal;
            }

//            totalSubtotal = newSubtotal;
            txt_subtotal.setText("");

            if (model.getRowCount() == 0) {
                // Kosongkan input jika semua data dihapus
                txt_supplier.setText("");
            }
        }

    }//GEN-LAST:event_btn_hapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pembelian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pembelian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel bar_bawah;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_catatan;
    private javax.swing.JButton btn_daftar;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_keluar;
    private javax.swing.JButton btn_pembelian;
    private javax.swing.JButton btn_penjualan;
    private javax.swing.JButton btn_preorder;
    private javax.swing.JButton btn_product;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tbl_detailPembelian;
    private javax.swing.JTable tbl_products;
    private javax.swing.JTextField txt_hargaSatuan;
    private javax.swing.JTextField txt_hargaSupplier;
    private javax.swing.JTextField txt_jenis;
    private javax.swing.JTextField txt_jumlah;
    private javax.swing.JTextField txt_subtotal;
    private javax.swing.JTextField txt_supplier;
    // End of variables declaration//GEN-END:variables
}
